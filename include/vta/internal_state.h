// file: internal_state.h

#ifndef VTA_INTERNAL_STATE_H__
#define VTA_INTERNAL_STATE_H__

#include <vta/memory_map.h>
#include <vta/instr_config.h>

namespace ilang {
namespace vta {

// ------------ child instruction FSM state ------------------ //
#define VTA_CHILD_INSTR_STATE "vta_child_instr_state"
#define VTA_CHILD_INSTR_STATE_BITWIDTH 5

#define VTA_CHILD_VALID_FLAG "vta_child_instr_valid_flag"
#define VTA_CHILD_VALID_FLAG_BITWIDTH 1

#define VTA_VALID 1
#define VTA_INVALID 0

#define VTA_CHILD_STATE_IDLE 0

#define VTA_CHILD_STATE_LOAD_WGT_Y_SIZE 1
#define VTA_CHILD_STATE_LOAD_WGT_X_SIZE 2

#define VTA_CHILD_STATE_LOAD_INP_Y_OFFSET_0 3
#define VTA_CHILD_STATE_LOAD_INP_Y_SIZE 4
#define VTA_CHILD_STATE_LOAD_INP_X_PAD_0 5
#define VTA_CHILD_STATE_LOAD_INP_X_SIZE 6
#define VTA_CHILD_STATE_LOAD_INP_X_PAD_1 7
#define VTA_CHILD_STATE_LOAD_INP_Y_OFFSET_1 8

#define VTA_CHILD_STATE_LOAD_UOP 9

#define VTA_CHILD_STATE_LOAD_BIAS_Y_SIZE 10
#define VTA_CHILD_STATE_LOAD_BIAS_X_SIZE 11

#define VTA_CHILD_STATE_GEMM_START 12
#define VTA_CHILD_STATE_GEMM_OUT_LOOP 13
#define VTA_CHILD_STATE_GEMM_IN_LOOP 14
#define VTA_CHILD_STATE_GEMM_UPDATE_UPC 15
#define VTA_CHILD_STATE_GEMM_READ_UOP 16
#define VTA_CHILD_STATE_GEMM_INNER_LOOP_BATCH_IDX 17
#define VTA_CHILD_STATE_GEMM_INNER_LOOP_OC_IDX 18
#define VTA_CHILD_STATE_GEMM_INNER_LOOP_MATMUL 19
#define VTA_CHILD_STATE_GEMM_INNER_LOOP_UPDATE_SUM 20
// #define VTA_CHILD_STATE_GEMM_WR_TENSOR 20
// #define VTA_CHILD_STATE_GEMM_UPDATE_IN_OFFSET 21
// #define VTA_CHILD_STATE_GEMM_UPDATE_OUT_OFFSET 22
#define VTA_CHILD_STATE_GEMM_DONE 23

// --------------- internal states for vta load/store -------------------- //
#define VTA_LOAD_Y_CNTR "vta_load_y_cntr"
#define VTA_LOAD_Y_CNTR_BITWIDTH (VTA_MEMOP_SIZE_BITWIDTH)

#define VTA_LOAD_X_CNTR "vta_load_x_cntr"
#define VTA_LOAD_X_CNTR_BITWIDTH VTA_MEMOP_SIZE_BITWIDTH

#define VTA_LOAD_SRAM_ADDR "vta_load_sram_addr"
#define VTA_LOAD_SRAM_ADDR_BITWIDTH VTA_MEMORY_ADDR_BITWIDTH

#define VTA_LOAD_DRAM_ADDR "vta_load_dram_addr"
#define VTA_LOAD_DRAM_ADDR_BITWIDTH VTA_MEMORY_ADDR_BITWIDTH

#define VTA_LOAD_INP_PAD_CNTR "vta_load_inp_pad_cntr"
#define VTA_LOAD_INP_PAD_CNTR_BITWIDTH VTA_MEMOP_SRAM_ADDR_BITWIDTH

#define VTA_LOAD_Y_OFFSET_0 "vta_load_y_offset_0"
#define VTA_LOAD_Y_OFFSET_0_BITWIDTH VTA_MEMOP_SRAM_ADDR_BITWIDTH

#define VTA_LOAD_Y_OFFSET_1 "vta_load_y_offset_1"
#define VTA_LOAD_Y_OFFSET_1_BITWIDTH VTA_MEMOP_SRAM_ADDR_BITWIDTH

// ---------------- internal states for vta gemm ------------------------- //
#define VTA_GEMM_OUT_LOOP_CNTR "vta_gemm_out_loop_cntr"
#define VTA_GEMM_OUT_LOOP_CNTR_BITWIDTH VTA_LOOP_ITER_WIDTH

#define VTA_GEMM_IN_LOOP_CNTR "vta_gemm_in_loop_cntr"
#define VTA_GEMM_IN_LOOP_CNTR_BITWIDTH VTA_LOOP_ITER_WIDTH

#define VTA_GEMM_UOP_CNTR "vta_gemm_uop_cntr"
#define VTA_GEMM_UOP_CNTR_BITWIDTH VTA_LOG_UOP_BUFF_DEPTH

#define VTA_GEMM_DST_IDX "vta_gemm_dst_idx"
#define VTA_GEMM_DST_IDX_BITWIDTH \
  (VTA_LOG_ACC_BUFF_DEPTH + 1)

#define VTA_GEMM_SRC_IDX "vta_gemm_src_idx"
#define VTA_GEMM_SRC_IDX_BITWIDTH \
  (VTA_LOG_INP_BUFF_DEPTH + 1)

#define VTA_GEMM_WGT_IDX "vta_gemm_wgt_idx"
#define VTA_GEMM_WGT_IDX_BITWIDTH \
  (VTA_LOG_WGT_BUFF_DEPTH + 1)

#define VTA_GEMM_DST_OFFSET_OUT "vta_gemm_dst_offset_out"
#define VTA_GEMM_DST_OFFSET_OUT_BITWIDTH VTA_GEMM_DST_IDX_BITWIDTH

#define VTA_GEMM_SRC_OFFSET_OUT "vta_gemm_src_offset_out"
#define VTA_GEMM_SRC_OFFSET_OUT_BITWIDTH VTA_GEMM_SRC_IDX_BITWIDTH

#define VTA_GEMM_WGT_OFFSET_OUT "vta_gemm_wgt_offset_out"
#define VTA_GEMM_WGT_OFFSET_OUT_BITWIDTH VTA_GEMM_WGT_IDX_BITWIDTH

#define VTA_GEMM_DST_OFFSET_IN "vta_gemm_dst_offset_in"
#define VTA_GEMM_DST_OFFSET_IN_BITWIDTH VTA_GEMM_DST_IDX_BITWIDTH

#define VTA_GEMM_SRC_OFFSET_IN "vta_gemm_src_offset_in"
#define VTA_GEMM_SRC_OFFSET_IN_BITWIDTH VTA_GEMM_SRC_IDX_BITWIDTH

#define VTA_GEMM_WGT_OFFSET_IN "vta_gemm_wgt_offset_in"
#define VTA_GEMM_WGT_OFFSET_IN_BITWIDTH VTA_GEMM_WGT_IDX_BITWIDTH

#define VTA_GEMM_INNER_LOOP_BATCH_CNTR "vta_gemm_inner_loop_batch_cntr"
#define VTA_GEMM_INNER_LOOP_BATCH_CNTR_BITWIDTH VTA_MEMORY_ADDR_BITWIDTH

#define VTA_GEMM_INNER_LOOP_OC_CNTR "vta_gemm_inner_loop_oc_cntr"
#define VTA_GEMM_INNER_LOOP_OC_CNTR_BITWIDTH VTA_MEMORY_ADDR_BITWIDTH

#define VTA_GEMM_INNER_LOOP_IC_CNTR "vta_gemm_inner_loop_ic_cntr"
#define VTA_GEMM_INNER_LOOP_IC_CNTR_BITWIDTH VTA_MEMORY_ADDR_BITWIDTH

#define VTA_GEMM_MATMUL_SUM_TEMP "vta_gemm_matmul_sum_temp"
#define VTA_GEMM_MATMUL_SUM_TEMP_BITWIDTH \
  (VTA_WEIGHT_BITWIDTH + VTA_INPUT_DATA_BITWIDTH + VTA_LOG_BLOCK_IN + 1)

#define VTA_GEMM_ACCUM_REG "vta_gemm_accum_reg"
#define VTA_GEMM_ACCUM_REG_BITWIDTH VTA_ACCUM_BITWIDTH

// #define VTA_GEMM_UOP "vta_gemm_uop"
// #define VTA_GEMM_UOP_BITWIDTH VTA_UOP_BITWIDTH


// gemm tensor memory
#define VTA_GEMM_WGT_TENSOR "vta_gemm_wgt_tensor"
#define VTA_GEMM_WGT_TENSOR_ENTRY_NUM (VTA_BLOCK_OUT * VTA_BLOCK_IN)
#define VTA_GEMM_WGT_TENSOR_DATA_BTIWIDTH VTA_WEIGHT_BITWIDTH

#define VTA_GEMM_INP_TENSOR "vta_gemm_inp_tensor"
#define VTA_GEMM_INP_TENSOR_ENTRY_NUM (VTA_BATCH_SIZE * VTA_BLOCK_IN)
#define VTA_GEMM_INP_TENSOR_DATA_BITWIDTH VTA_INPUT_DATA_BITWIDTH

#define VTA_GEMM_ACCUM_TENSOR "vta_gemm_accum_tensor"
#define VTA_GEMM_ACCUM_TENSOR_ENTRY_NUM (VTA_BATCH_SIZE * VTA_BLOCK_OUT)
#define VTA_GEMM_ACCUM_TENSOR_DATA_BITWIDTH VTA_ACCUM_BITWIDTH

#define VTA_GEMM_OUT_TENSOR "vta_gemm_out_tensor"
#define VTA_GEMM_OUT_TENSOR_ENTRY_NUM (VTA_BATCH_SIZE * VTA_BLOCK_OUT)
#define VTA_GEMM_OUT_TENSOR_DATA_BITWIDTH VTA_OUT_BITWIDTH







}
}

#endif